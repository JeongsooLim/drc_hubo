<?xml version='1.0' ?>
<sdf version='1.4'>
  <model name='DRC_head'>
    <pose>0 0 0 0 0 0</pose>

    <link name ='Body_Head'>
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <pose>-0.0080768 0.0056186 0.13872 0 0 0</pose>
        <mass>0.069065</mass>
        <inertia>
          <ixx>0.000068275</ixx>
          <ixy>0.0000011826</ixy>
          <ixz>0.000014243</ixz>
          <iyy>0.000060857</iyy>
          <iyz>-0.0000045042</iyz>
          <izz>0.000053323</izz>
        </inertia>
      </inertial>
      <collision name='Body_Head_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://DRC_hubo/meshes/Body_Head.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='Body_Head_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://DRC_hubo/meshes/Body_Head.STL</uri>
          </mesh>
        </geometry>
      </visual>

      <sensor type="camera" name="streaming_camera">
        <pose>0.082 -0.063 0.253 0 0.1746 0</pose>
        <update_rate>10.0</update_rate>
        <visualize>false</visualize>
        <always_on>1</always_on>
        <camera name="streaming">
          <horizontal_fov>2.094</horizontal_fov>
          <image>
            <width>1000</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>

        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>streaming_camera</cameraName>
          <imageTopicName>streaming_raw</imageTopicName>
          <cameraInfoTopicName>streaming_info</cameraInfoTopicName>
          <frameName>Sensor_streaming</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </link>

    <joint name='Head_Sensor' type='revolute'>
      <child>Body_Hokuyo</child>
      <parent>Body_Head</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-5</lower>
          <upper>5</upper>
          <effort>10</effort>
          <velocity>1</velocity>
        </limit>
        <dynamics>
          <damping>15</damping> <friction>2</friction>
        </dynamics>
      </axis>
    </joint>

    <link name='Body_Hokuyo'>
      <pose>0.085 0.0425 0.165 0 0 0</pose>
      <inertial>
        <pose>0.0010159 -0.041037 0.0011902 0 0 0</pose>
        <mass>0.0034186</mass>
        <inertia>
          <ixx>0.0000046452</ixx>
          <ixy>-4.8449E-08</ixy>
          <ixz>-2.3351E-07</ixz>
          <iyy>0.0000048884</iyy>
          <iyz>1.6828E-08</iyz>
          <izz>0.0000020206</izz>
        </inertia>
      </inertial>
      <visual name='Body_Hokuyo_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://DRC_hubo/meshes/Body_Hokuyo.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <collision name='Body_Hokuyo_collision-base'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://DRC_hubo/meshes/Body_Hokuyo.STL</uri>
          </mesh>
        </geometry>
      </collision>

      <sensor name='laser' type='ray'>
        <pose>0 -0.042 0.036 0 -0 0</pose>
        <always_on>1</always_on>
        <update_rate>40</update_rate>
        <visualize>false</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>1000</samples>
              <resolution>1</resolution>
              <min_angle>-1.745</min_angle>
              <max_angle>1.745</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>10</max>
            <resolution>0.005</resolution>
          </range>
        </ray>

        <plugin name='gazebo_ros_hokuyo_plugin' filename='libgazebo_ros_laser.so'>
          <!--robotNamespace>/DRC_head</robotNamespace-->
          <topicName>/scan</topicName>
          <frameName>Sensor_scan</frameName>
        </plugin>
      </sensor>

      <sensor type="camera" name="head_camera">
        <pose>0.05 -0.043 -0.042 0 -0 0</pose>
        <update_rate>10.0</update_rate>
        <visualize>false</visualize>
        <always_on>1</always_on>
        <camera name="head">
          <horizontal_fov>2.094</horizontal_fov>
          <image>
            <width>1000</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>

        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>head_camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>Sensor_camera</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </link>

  <plugin name="head_plugin" filename="~/catkin_ws/devel/lib/libhead_plugin.so"/>



  </model>
</sdf>
